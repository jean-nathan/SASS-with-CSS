// Variables of grid
$cols: 12;
$gutter: 20;
$l-device: 1200px;
$m-device: 760px;
$s-device: 480px;

// box-sizing
*,
*::after,
*::before {
  box-sizing: border-box;
}

// Mixin de media-querie
@mixin d($size) {
  @if $size == l {
    @media screen and (min-width: $l-device) {
      @content;
    }
  } @else if $size == m {
    @media screen and (min-width: ($m-device)) and (max-width: ($l-device - 1)) {
      @content;
    }
  } @else if $size == s {
    @media screen and (max-width: ($m-device - 1)) {
      @content;
    }
  }
}

div {
  @include d(s) {
    background: green;
  }
}
// Funcao do grid

  @function grid($col, $offset: false) {
    $divisao: calc($col / $cols);
    $width: $divisao * 100;
    @debug $width;
    $result: calc($width - $gutter);
  
    // Se houver offset, ajustar o gutter
    @if $offset == offset {
      $gutter: calc($gutter / 2);
      $result: $width + $gutter;
    }
  
    // Retornar o valor com a unidade percentual
    @return #{$result+"%"};
  }
  
// Gere as classes de grid

@for $i from 1 through $cols {
  .grid-#{$i} {
    width: grid($i);
  }
}

// Mixin estrutura do grid

@mixin grid-structure {
  float: left;
  min-height: 1px;
  margin-left: calc($gutter / 2);
  margin-right: calc($gutter / 2);
  @include d(s) {
    width: 100%;
    float: none;
    margin-left: 0;
    margin-right: 0;
  }
}

[class^="grid-"] {
  @include grid-structure();
}

// Gere as classes de offset

@for $i from 1 through $cols {
  .offset-#{$i} {
    margin: grid($i, offset);
    @extend %offset;
  }
}

@include d(s) {
  %offset {
    margin-left: 0px;
  }
}

@mixin clearflix {
  &::after, &::before {
    content: '';
    display: table;
    clear: both;
  }
}

@mixin container {
  max-width: $l-device;
  margin: 0px auto;
  position: relative;
  @include d(m) {
    max-width: $m-device;
  }
  @include d(s) {
    max-width: $s-device;
    margin-left: 10px;
    margin-right: 10px;
  }
  @include clearflix;
}


.container {
  @include container;
}

